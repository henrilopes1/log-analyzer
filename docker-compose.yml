version: '3.8'

services:
  log-analyzer-api:
    build: 
      context: .
      dockerfile: Dockerfile.api
    container_name: log-analyzer-api
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - ENV=production
    volumes:
      # Volume para logs persistentes (opcional)
      - ./logs:/app/logs:ro
      # Volume para dados de exemplo
      - ./data:/app/data:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - log-analyzer-network

  # Opcional: servi√ßo nginx para proxy reverso
  nginx:
    image: nginx:alpine
    container_name: log-analyzer-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - log-analyzer-api
    restart: unless-stopped
    networks:
      - log-analyzer-network
    # Descomente para usar nginx
    profiles:
      - with-nginx

networks:
  log-analyzer-network:
    driver: bridge

volumes:
  logs:
  data: